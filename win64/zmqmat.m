function [methodinfo,structs,enuminfo,ThunkLibName]=zmqmat
%ZMQMAT Create structures to define interfaces found in 'zmqmat'.

%This function was generated by loadlibrary.m parser version 1.1.6.36 on Sat Apr 13 15:58:12 2013
%perl options:'zmqmat.i -outfile=zmqmat.m -thunkfile=zmqmat_thunk_pcwin64.c -header=zmqmat.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'zmqmat_thunk_pcwin64');
%  void * zmqmat_marray ( size_t size ); 
fcns.thunkname{fcnNum}='voidPtruint64Thunk';fcns.name{fcnNum}='zmqmat_marray'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='voidPtr'; fcns.RHS{fcnNum}={'uint64'};fcnNum=fcnNum+1;
%  void zmqmat_insert ( void * array , void * socket ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrThunk';fcns.name{fcnNum}='zmqmat_insert'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'voidPtr'};fcnNum=fcnNum+1;
%  int zmqmat_wait ( void * array , long timeout ); 
fcns.thunkname{fcnNum}='int32voidPtrlongThunk';fcns.name{fcnNum}='zmqmat_wait'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'voidPtr', 'long'};fcnNum=fcnNum+1;
methodinfo=fcns;